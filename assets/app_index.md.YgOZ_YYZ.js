import{_ as t,c as i,o as s,ae as a}from"./chunks/framework.CS8hwus4.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"app/index.md","filePath":"app/index.md","lastUpdated":null}'),l={name:"app/index.md"};function n(o,e,r,d,p,h){return s(),i("div",null,e[0]||(e[0]=[a(`<div id="top" align="center" style="text-align:center;"><h1><br> 📦 TypeScript Application Template </h1></div><h2 id="📚-summary" tabindex="-1">📚 Summary <a class="header-anchor" href="#📚-summary" aria-label="Permalink to &quot;📚 Summary&quot;">​</a></h2><p><strong>Professional Template</strong> with CI/CD-enabled, versioning with Semantic Release and Typedoc+VitePress documentation.</p><h2 id="🧩-what-s-included" tabindex="-1">🧩 What&#39;s Included <a class="header-anchor" href="#🧩-what-s-included" aria-label="Permalink to &quot;🧩 What&#39;s Included&quot;">​</a></h2><p><strong>Core Infrastructure</strong></p><ul><li>☑️ Node.js + TypeScript</li><li>☑️ Vitest (Unit Testing)</li><li>☑️ Semantic Release</li><li>☑️ GitHub Actions CI/CD</li><li>☑️ GitHub Actions GitHub Pages</li></ul><p><strong>Quality Assurance</strong></p><ul><li>☑️ BiomeJS (Linting/Formatting)</li><li>☑️ Husky + Lint Staged</li><li>☑️ Commitlint + Conventional Commits</li><li>☑️ CodeQL Scanning</li></ul><p><strong>Project Scaffolding</strong></p><ul><li>☑️ Docs: Contribution Guide &amp; Code of Conduct</li><li>☑️ Husky Git Hooks</li><li>☑️ Automated CHANGELOG.md with Semantic Release</li><li>☑️ TypeDoc + Vitepress for Documentation Site</li></ul><h3 id="❓-when-to-use-this-template" tabindex="-1">❓ When to Use This Template <a class="header-anchor" href="#❓-when-to-use-this-template" aria-label="Permalink to &quot;❓ When to Use This Template&quot;">​</a></h3><p>Perfect for developers who need:</p><ol><li><strong>Zero-config</strong> TypeScript library setup</li><li><strong>Automated docs</strong> with TypeDoc</li><li><strong>CI/CD pipeline</strong> with GitHub Actions</li><li><strong>Semantic versioning</strong> right out of the box</li></ol><h3 id="💡-ideal-for" tabindex="-1">💡 Ideal for: <a class="header-anchor" href="#💡-ideal-for" aria-label="Permalink to &quot;💡 Ideal for:&quot;">​</a></h3><ul><li>Building npm packages</li><li>Open source projects</li><li>Enterprise-grade libraries</li></ul><hr><h2 id="🤖-automation-workflows" tabindex="-1">🤖 Automation Workflows <a class="header-anchor" href="#🤖-automation-workflows" aria-label="Permalink to &quot;🤖 Automation Workflows&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">Workflow</th><th style="text-align:left;">Description</th><th style="text-align:left;">Trigger</th></tr></thead><tbody><tr><td style="text-align:left;"><code>0.test.yml</code></td><td style="text-align:left;">Runs unit tests</td><td style="text-align:left;">Push/PR to <code>main</code> or <code>develop</code></td></tr><tr><td style="text-align:left;"><code>1.create-pr.yml</code></td><td style="text-align:left;">Creates or updates a pull request from <code>develop</code> to <code>main</code></td><td style="text-align:left;">Push to <code>develop</code></td></tr><tr><td style="text-align:left;"><code>2.deploy-docs.yml</code></td><td style="text-align:left;">Deploys documentation and coverage badge</td><td style="text-align:left;">After a successful release</td></tr><tr><td style="text-align:left;"><code>3.release.yml</code></td><td style="text-align:left;">Generates changelog, tags, and releases</td><td style="text-align:left;">Push to <code>main</code></td></tr><tr><td style="text-align:left;"><code>4.publish-npm.yml</code></td><td style="text-align:left;">Publishes package to npm</td><td style="text-align:left;">After a successful release</td></tr></tbody></table><hr><h2 id="🚀-quick-start" tabindex="-1">🚀 Quick Start <a class="header-anchor" href="#🚀-quick-start" aria-label="Permalink to &quot;🚀 Quick Start&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> degit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> heliomarpm/tslib-template</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your-lib</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your-lib</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="🛠️-initial-setup" tabindex="-1">🛠️ Initial Setup <a class="header-anchor" href="#🛠️-initial-setup" aria-label="Permalink to &quot;🛠️ Initial Setup&quot;">​</a></h3><ol><li><p>Replace template info:</p><ul><li>Update <code>name</code> and <code>description</code> in <code>package.json</code></li><li>Set version to <code>0.0.0</code> in <code>package.json</code></li><li>Replace all references to <code>tslib-template</code> and <code>heliomarpm</code> in <code>package.json</code> and <code>README.md</code></li><li>Delete <code>CHANGELOG.md</code></li></ul></li><li><p>Configure GitHub repository:</p><ul><li>Enable GitHub Actions (Settings → Actions → General)</li><li>Set up branch protection rules (optional)</li><li>Configure GitHub Pages for documentation</li><li>Remove <code>if false</code> from <code>publish-npm.yml</code></li><li>Generate <a href="https://docs.npmjs.com/creating-and-viewing-access-tokens" target="_blank" rel="noreferrer">npm authentication token</a> and copy it.</li><li>[Navigate to your GitHub repository page, click Settings and then Secrets. Click on New repository secret, fill in <code>NPM_TOKEN</code> as the Name, paste the npm token created on the previous step inside the Value field and hit Add secret.</li></ul></li></ol><hr><h2 id="📈-semantic-versioning" tabindex="-1">📈 Semantic Versioning <a class="header-anchor" href="#📈-semantic-versioning" aria-label="Permalink to &quot;📈 Semantic Versioning&quot;">​</a></h2><p>This template uses <a href="https://semantic-release.gitbook.io/" target="_blank" rel="noreferrer">semantic-release</a> for automated version management and package publishing. Version numbers are determined automatically based on commit messages:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Commit Message</th><th style="text-align:left;">Release Type</th><th style="text-align:left;">Example Version</th></tr></thead><tbody><tr><td style="text-align:left;"><code>revert(scope): message</code></td><td style="text-align:left;">Patch</td><td style="text-align:left;">1.0.1</td></tr><tr><td style="text-align:left;"><code>fix(scope): message</code></td><td style="text-align:left;">Patch</td><td style="text-align:left;">1.0.1</td></tr><tr><td style="text-align:left;"><code>feat(scope): message</code></td><td style="text-align:left;">Minor</td><td style="text-align:left;">1.1.0</td></tr><tr><td style="text-align:left;"><code>BREAKING CHANGE: message</code></td><td style="text-align:left;">Major</td><td style="text-align:left;">2.0.0</td></tr></tbody></table><h3 id="📝-commit-message-format" tabindex="-1">📝 Commit Message Format <a class="header-anchor" href="#📝-commit-message-format" aria-label="Permalink to &quot;📝 Commit Message Format&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">short summary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             └─⫸</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Summary</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> present</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tense.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> capitalized.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> period</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> end.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       └─⫸</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Scope:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> core</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cli</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">etc.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└─⫸</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Type:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">feat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ci</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">refactor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">perf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">test</span></span></code></pre></div><p>When a commit is pushed to <code>main</code> branch:</p><ol><li>semantic-release analyzes commit messages</li><li>Determines the next version number</li><li>Generates changelog</li><li>Creates a git tag</li><li>Publishes the release to GitHub</li></ol><blockquote><p><strong>Note</strong>: To trigger a release, commits must follow the <a href="https://www.conventionalcommits.org/" target="_blank" rel="noreferrer">Conventional Commits</a> specification.</p></blockquote><hr><h2 id="📦-project-scripts" tabindex="-1">📦 Project Scripts <a class="header-anchor" href="#📦-project-scripts" aria-label="Permalink to &quot;📦 Project Scripts&quot;">​</a></h2><ul><li><code>npm run lint</code> — run linter and fixer</li><li><code>npm run format</code> — run formatter</li><li><code>npm run test</code> — run unit tests</li><li><code>npm run test:c</code> — run unit tests with coverage</li><li><code>npm run commit</code> - run conventional commits check</li><li><code>npm run release:test</code> — dry run semantic release</li><li><code>npm run docs:dev</code> — run documentation locally</li><li><code>npm run docs</code> — build documentation and deploy</li></ul><h3 id="generate-documentation-page" tabindex="-1">Generate Documentation Page <a class="header-anchor" href="#generate-documentation-page" aria-label="Permalink to &quot;Generate Documentation Page&quot;">​</a></h3><p>see <a href="https://www.typedoc-plugin-markdown.org/plugins/vitepress/quick-start" target="_blank" rel="noreferrer">TypeDoc Vitepress</a></p><ul><li>First time: <code>npx vitepress init</code></li><li>Documentation code base: <code>npm run docs</code> or <code>npm run docs:dev</code></li></ul><hr><h2 id="⚙️-configuration-guide" tabindex="-1">⚙️ Configuration Guide <a class="header-anchor" href="#⚙️-configuration-guide" aria-label="Permalink to &quot;⚙️ Configuration Guide&quot;">​</a></h2><h3 id="🔐-workflow-permissions" tabindex="-1">🔐 Workflow permissions <a class="header-anchor" href="#🔐-workflow-permissions" aria-label="Permalink to &quot;🔐 Workflow permissions&quot;">​</a></h3><p>For GitHub Actions workflows to create, edit, and manage <strong>Pull Requests via API (GitHub CLI or REST)</strong> and perform operations like push, release, and deploy, you need to configure the appropriate repository permissions.</p><ol><li>Go to your repository&#39;s <code>Settings</code> → <code>Actions</code> → <code>General</code></li><li>Go to section <code>Workflow permissions</code></li><li>Set the permission level to <code>Read and write permissions</code></li><li>Check on <code>Allow GitHub Actions to create and approve pull requests</code></li><li>Click on <strong>&quot;Save changes&quot;</strong></li></ol><blockquote><p>By default, the GITHUB_TOKEN token used in actions has read-only permissions. Enabling Read and write permissions allows you to create PRs, edit PRs, commit changes, and create tags/releases programmatically.</p></blockquote><details><summary>📌 Configuration alternatives </summary><p><strong>Replace the <code>GITHUB_TOKEN</code> with:</strong></p><details><summary>🔐 Option 1 — Classic Personal Access Token (PAT)</summary><p>✅ <strong>Required permissions:</strong></p><ul><li><code>repo</code> (for read and write access to repositories)</li><li><code>workflow</code> (for interacting with GitHub Actions)</li></ul><p>✅ <strong>Features:</strong></p><ul><li>A single token can be used in <strong>any repository</strong> of the same user or organization</li><li>Cannot restrict granular access to specific repositories or permissions (full access within the configured scope)</li></ul><p>✅ <strong>How to use:</strong></p><ol><li><p>Create a Classic PAT in: <code>GitHub Settings → Developer Settings → Personal access tokens → Tokens (classic)</code></p></li><li><p>Enable the scopes:</p><ul><li><code>repo</code></li><li><code>workflow</code></li></ul></li><li><p>Save the token as a secret in the repository:</p><ul><li><code>Settings → Secrets and variables → Actions</code></li><li>Suggested name: <code>PAT_TOKEN</code></li></ul></li><li><p>Reference in workflow:</p></li></ol><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  GITHUB_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.PAT_TOKEN }}</span></span></code></pre></div></details><details><summary>🔐 Option 2 — Fine-grained Personal Access Token (PAT)</summary><p>✅ <strong>Required permissions:</strong></p><ul><li><code>Contents: Read and write</code></li><li><code>Actions: Read and write</code></li><li><code>Metadata: Read-only</code></li><li>(Optional) <code>Bypass branch protections</code> if you want to allow direct push even on protected branches</li></ul><p>✅ <strong>Features:</strong></p><ul><li>Allows you to restrict access to specific repositories at the time of creation</li><li>Controls permissions with more granularity and security</li><li>Needs to explicitly mark which repositories it will have access to</li><li>Can be used in multiple repositories <strong>if configured to allow access to those repositories during token creation</strong> (either by selecting &quot;All repositories&quot; or manually selecting multiple)</li></ul><p>✅ <strong>How to use:</strong></p><ol><li><p>Create a Fine-grained PAT in: <code>GitHub Settings → Developer Settings → Personal access tokens → Fine-grained tokens</code></p></li><li><p>Set:</p><ul><li>Repositories: select all required or check &quot;All repositories&quot;</li><li>Permissions: <ul><li><code>Contents: Read and write</code></li><li><code>Actions: Read and write</code></li><li><code>Metadata: Read-only</code></li><li>(Optional) <code>Bypass branch protections</code></li></ul></li></ul></li><li><p>Save the token as a secret in the repository:</p><ul><li><code>Settings → Secrets and variables → Actions</code></li><li>Suggested name: <code>PAT_TOKEN</code></li></ul></li><li><p>Reference in workflow:</p></li></ol><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  GITHUB_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.PAT_TOKEN }}</span></span></code></pre></div></details><h4 id="📌-recommended-permissions-summary" tabindex="-1">📌 Recommended Permissions Summary <a class="header-anchor" href="#📌-recommended-permissions-summary" aria-label="Permalink to &quot;📌 Recommended Permissions Summary&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Operation</th><th style="text-align:left;"><code>GITHUB_TOKEN</code> (read/write)</th><th style="text-align:left;">Classic PAT</th><th style="text-align:left;">Fine-grained PAT</th></tr></thead><tbody><tr><td style="text-align:left;">Create/Edit Pull Request</td><td style="text-align:left;">✅</td><td style="text-align:left;">✅</td><td style="text-align:left;">✅ (<code>Contents: RW</code>)</td></tr><tr><td style="text-align:left;">Commit files to repository</td><td style="text-align:left;">✅ (if no branch protection)</td><td style="text-align:left;">✅</td><td style="text-align:left;">✅</td></tr><tr><td style="text-align:left;">Create releases and tags via API</td><td style="text-align:left;">✅</td><td style="text-align:left;">✅</td><td style="text-align:left;">✅</td></tr><tr><td style="text-align:left;">Bypass branch protection</td><td style="text-align:left;">❌</td><td style="text-align:left;">❌</td><td style="text-align:left;">✅ (if enabled)</td></tr></tbody></table><blockquote><p>⚠️ <strong>Note:</strong><br> The built-in <code>GITHUB_TOKEN</code> in Actions respects all b&gt;ranch protection rules, which prevents direct pushes to main if branch protection is configured.</p><p>Using a PAT or adjusting branch protection are the recommended solutions when automations require higher permissions.</p><p>For security, it is best to use <strong>Fine-grained PATs</strong> whenever possible, with specific permissions for the repositories and actions required.</p></blockquote></details><hr><h2 id="📦-dependencies" tabindex="-1">📦 Dependencies <a class="header-anchor" href="#📦-dependencies" aria-label="Permalink to &quot;📦 Dependencies&quot;">​</a></h2><p>✅ Zero runtime dependencies <br> 🔄 All devDependencies are pinned to latest stable versions</p><h2 id="🤝-contributing" tabindex="-1">🤝 Contributing <a class="header-anchor" href="#🤝-contributing" aria-label="Permalink to &quot;🤝 Contributing&quot;">​</a></h2><p>We welcome contributions! Please read:</p><ul><li><a href="./_media/CODE_OF_CONDUCT">Code of Conduct</a></li><li><a href="./_media/CONTRIBUTING">Contributing Guide</a></li></ul><p>Thank you to everyone who has already contributed to the project!</p><a href="https://github.com/heliomarpm/tslib-template/graphs/contributors" target="_blank"><img src="https://contrib.nn.ci/api?repo=heliomarpm/tslib-template&amp;no_bot=true"></a><h6 id="made-with-contrib-nn" tabindex="-1">Made with <a href="https://contrib.nn.ci" target="_blank" rel="noreferrer">contrib.nn</a>. <a class="header-anchor" href="#made-with-contrib-nn" aria-label="Permalink to &quot;Made with [contrib.nn](https://contrib.nn.ci).&quot;">​</a></h6><h3 id="❤️-support-this-project" tabindex="-1">❤️ Support this project <a class="header-anchor" href="#❤️-support-this-project" aria-label="Permalink to &quot;❤️ Support this project&quot;">​</a></h3><p>If this project helped you in any way, there are several ways to contribute. <br> Help us maintain and improve this template:</p><p>⭐ Starring the repository <br> 🐞 Reporting bugs <br> 💡 Suggest features <br> 🧾 Improving the documentation <br> 📢 Share with others</p><p>💵 Supporting via GitHub Sponsors, Ko-fi, Paypal or Liberapay, you decide. 😉</p><div class="badges"><p><a href="https://bit.ly/paypal-sponsor-heliomarpm" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/donate%20on-paypal-1C1E26?style=for-the-badge&amp;labelColor=1C1E26&amp;color=0475fe" alt="PayPal"></a><a href="https://ko-fi.com/heliomarpm" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/kofi-1C1E26?style=for-the-badge&amp;labelColor=1C1E26&amp;color=ff5f5f" alt="Ko-fi"></a><a href="https://liberapay.com/heliomarpm" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/liberapay-1C1E26?style=for-the-badge&amp;labelColor=1C1E26&amp;color=f6c915" alt="Liberapay"></a><a href="https://github.com/sponsors/heliomarpm" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/GitHub%20-Sponsor-1C1E26?style=for-the-badge&amp;labelColor=1C1E26&amp;color=db61a2" alt="GitHub Sponsors"></a></p></div><h2 id="📝-license" tabindex="-1">📝 License <a class="header-anchor" href="#📝-license" aria-label="Permalink to &quot;📝 License&quot;">​</a></h2><p><a href="./_media/LICENSE">MIT © Heliomar P. Marques</a> <a href="#top">🔝</a></p><hr>`,62)]))}const k=t(l,[["render",n]]);export{g as __pageData,k as default};
